*** WebDAV
 - 하이퍼 텍스트 전송 프로토콜의 확장
 - 월드 와이드 웹 서버에 저장된 문서와 파일을 편집하고 관리하는 사용자들 사이에 협업을 손쉽게 만들어 준다.

*** URL (Uniform Resource Locator)
 - 자원
 - Rewrite 등의 아파치, 토멬ㅅ 등의 핸들러로 인해 요즘은 자원이라고 부름
 - 웹사이트 주소가 요청하는 파일이라기 보다는 구분자로 보는 것
 - 웹 상에 서비스를 제공하는 각 서버들에 있는 파일 위치를 표시하기 위한 것.

*** URI (Uniform Resource Identifier)
- 통합 자원 식별자
- 인터넷에 있는 자원을 나타내는 유일한 주소
- URI의 존재는 인터넷에서 요구되는 기본 조건으로서, 인터넷 프로토콜에 항상 붙어다님
  e.g) http://www.naver.com (http 프로토콜임을 명시하고 있음)
- URI의 하위개념에 URL, URN이 포함되어 있다.
- URI의 보편적인 형태가 URL 인데, URI의 부분집합으로 볼 수 있다.
  > 자원에 접근하기 위해 사용되는 절차
    : 어떤 자원을 가지고 있는 특정한 컴픁
	  컴퓨터 상의 유니크한 자원의 이름(파일명)
	  
	: http://test.com/test.pdf?docid=111 이라는 주소는 URI이지만 URL은 아니다.
	  - http://test.com/test.pdf 까지만 URL임(주소의 위치)
	  - docid=111이라는 쿼리 스트링의 값에 따라 결과가 달라지게 됨,
	    따라서 식별자 역할
		
*** URN (Uniform Resource Name)
- 위치와 상관없이 리소스의 이름값을 이용해서 접근하는 방식
- 노출된 URL은 http://naver.com/aaa/222 인데,
  http://naver.com/aaa/bbb/323 으로 요청을 보내면 404 Response를 받는다.
  이를 보완하기 위해서 위치 정보와는 무관하게 리소스를 찾게 해주는 방식임
- 해당 리소스의 위치정보가 아닌 실제 리소스의 이름으로 사용하는 방식.

A. 1XX
 - 정보 응답
	1) 100 Continue
	 - 임시적인 응답
	 - 지금까지 상태가 OK
	 - 클라이언트가 계속해서 요청을 하거나 이미 완료 요청을 완료한 경우에는 무시해도 되는 것을 알림
	
	2) 101 Switching Protocol
	 - 클라이언트가 보낸 Upgrage 요청 헤더에 대한 응답이 들어감.
	 - 서버에서 프로토콜을 변경할 것임을 알려줌.
	
	3) 102 Processing (WebDAV)
	 - 서버가 요청을 수신하였으며 이를 처리하고 있지만, 아직 제대로 된 응답을 알려줄 수 없음
	
	4) 103 Early Hints
	 - 주로 Link 헤더와 함께 사용됨
	 - 응답을 준비하는 동안 User Agent 가 사전 로딩(Preloading)을 시작할 수 있도록 한다.
	 

B. 2XX
 - 성공 응답
	1) 200 OK
	 - 요청이 성공적으로 되었음.
	 - 성공의 의미는 HTTP 메소드에 따라 달라짐.
		> Get
		 : 리소스를 불러와서 메시지 Body에 전송되었음
		> HEAD
		 : 개체 헤더가 메시지 Body에 있음.
		> PUT 또는 POST
		 : 수행 결과에 대한 리소스가 메시지 Body에 전송되었음
		> TRACE
		 : 메시지 Body는 서버에서 수신한 요청 메시지를 포함하고 있음
		
	2) 201 Created
	 - 요청이 성공적이었으며, 그 결과 새로운 리소스가 생성되었음
	 - 이 응답은 일반적으로 POST 요청 또는 일부 PUT 요청이후 온다.
	 
	3) 2020 Accepted
	 - 요청을 수신하였지만 그에 응하여 행동할 수 없음
	 - 이 응답은 요청처리에 대한 결과를 이후에 HTTP로 비동기 응답을 보내는 것에 대해서 명확하게 명시하지 않았다.
	 - 이 응답은 다른 프로세스에서 처리 또는 서버가 요청을 다루고 있거나 배치 프로세스를 하고 있는 경우를 위해 만들어짐
	 
	4) 203 Non-Authoritative Information
	 - 이 응답 코드는 돌려받은 메타 정보 세트가 오리진 서버의 것과 일치하지 않지만
	   로컬이나 서드 파티 복사본에서 모아졌음을 의미한다.
	 - 이러한 조건에서는 이 응답이 아니라 200 OK 응답을 반드시 우선한다.
	 
	5) 204 No Content
	 - 요청에 대해서 보내줄 수 있는 콘텐츠가 없지만, 헤더는 의미가 있을 수 있음.
	 - User agent는 리소스가 캐시된 헤더를 새로운 것으로 업데이트 할 수 있다.
	 
	6) 205 Reset Content
	 - 이 응답 코드는 요청을 완수한 이후에 사용자 에이전트에게 이 요청을 보낸 문서 View를 리셋하라고 알려줌
	 
	7) 206 Partial Content
	 - 클라이언트에서 복수의 스트림을 분할 다운로드 하고자 범위 헤더를 전송했음.
	
	8) 207 Multi-Status (WebDAV)
	 - 멀티-상태 응답은 여러 리소스가 여러 상태 코드인 상황이 적절한 경우에 해당되는 정보를 전달.
	 
	9) 208 Multi-Status (WebDAV)
	 - DAV에서 사용된다.
	 - propstat 응답 속성으로 동일 컬렉션으로 바인드된 복수의 내부 멤버를 반복적으로 열거하는 것을 피하기 위해 사용.
	
	10) 226 IM Used (HTTP Delta encoding)
	 - 서버가 GET 요청에 대한 리소스의 의무를 다 했고,
	 - 응답이 하나 또는 그 이상의 인스턴스 조작이 현재 인스턴스에 적용이 되었음을 알려준다.
	 
C. 3XX
 - 리다이렉션 메시지
	1) 300 Multiple Choice
	 - 요청에 대해서 하나 이상의 응답이 가능.
	 - user agent 또는 user는 그 중에 하나를 반드시 선택해야 한다.
	 - 응답 중 하나를 선택하는 방법에 대한 표준은 존재하지 않음.
	
	2) 301 Moved Permanently
	 - 요청한 리소스의 URI가 변경되었음을 의미한다.
	 - 새로운 URI가 응답에서 아마도 주어질 수 있음.
	
	3) 302 Found
	 - 요청한 리소스의 URI가 일시적으로 변경되었음을 의미한다.
	 - 새롭게 변경된 URI는 나중에 만들어 질 수 있음.
	 - 그러므로, 클라이언트는 향후의 요청도 반드시 동일한 URI로 해야한다.
	 
	4) 303 See other
	 - 클라이언트가 요청한 리소르르 다른 URI에서 GET 요청을 통해 얻어야 할 때,
	 - 서버가 클라이언트로 직접 보내는 응답.
	 
	5) 304 Not Modified 
	 - 캐시를 목적으로 사용됨.
	 - 클라이언트에게 응답이 수정되지 않았음을 알려줌
	 - 그러므로 클라이언트는 계속해서 응답의 캐시된 버전을 사용할 수 있음.
	 
	6) 305 Use Proxy
	 - 이전 버번의 HTTP 기술 사양에서 정의되었음.
	 - 요청한 응답은 반드시 프록시를 통해서 접속해야 하는 것을 알려줌.
	 - 프록시의 in-band 설정에 대한 보안상의 걱정으로 인하여 사라져 가고 있음.
	 
	7) 306 Unused
	 - 더 이상 사용되지 않음.
	 - 추후 사용을 위해 예약되어있음.
	 
	8) 307 Temprary Redirect
	 - 클라이언트가 요청한 리소스가 다른 URI에 있으며
	 - 이전 요청과 동일한 메소드를 사용하여 요청해야 할 때, 클라이언트에 이 응답을 직접 보냄
	 - 302 Found HTTP 응답 코드와 동일한 의미를 가지고 있으며,
	   User Agent가 반드시 사용된 HTTP 메소드를 변경하지 말아야 한다는 점만 다름
	 - 만약 첫 요청에 POST가 사용되었다면, 두 번째 요청도 반드시 POST를 사용해야 한다.
	 
	9) 308 Permanent Redirect
	 - 리소스가 이제 HTTP 응답 헤더의 Location: 에 명시된 영구히 다른 URI에 위치하고 있음을 의미한다.
	 - 이것은 301 Move Permanently HTTP 응답 코드와 동일한 의미를 가지고 있으며,
	   User agent가 반드시 HTTP 메소드를 변경하지 말아야한다는 점과 다르다.
	 - 만약 첫 요청에 POST가 사용되었다면, 두 번째 요청도 반드시 POST를 사용해야한다.
	
D. 4XX
- 클라이언트 에러 응답
	1) 400 Bad Request
	 - 잘못된 문법으로 인하여 서버가 요청을 이해할 수 없음을 의미.
	
	2) 401 Unauthorized
	 - 클라이언트는 요청한 응답을 받기 위해서는 반드시 스스로를 인증해야 한다.
	 
	3) 402 Payment Required
	 - 나중을 위해 예약되어 있음
	 
	4) 403 Forbidden
	 - 클라이언트는 콘텐츠에 접근할 권리를 가지고 있지 않음.
	 - 401 과 다른 점은 서버가 클라이언트가 누군지 알고 있음.
	
	5) 404 Not Found
	 - 서버는 요청받은 리소스를 찾을 수 없음.
	 - 브라우저에서는 알려지지 않은 URL을 의미한다.
	 - API에서 종점은 적절하지만 리소스 자체는 존재하지 않음을 의미할 수 있음.
	 - 서버들은 인증받지 않은 클라이언트로부터 리소르르 숨기기 위하여 이 응답을 403 대신에 전송할 수 있음
	
	6) 405 Method Not Allowed
	 - 요청한 메소드는 서버에서 알고 있지만, 제거되었고 사용할 수 없음.
	
	7) 406 Not Acceptable
	 - 서버가 서버 주도 콘텐츠 협상을 수행한 이후, 사용자 에어전트에서 정해진 규격에 따른 어떠한 콘텐츠도 찾이 않았을 때,
	   웹서버가 보냄.
	   
	8) 407 Proxy Authentication Requried
	 - 401과 비슷하지만 프록시에 의해 완료된 인증이 필요함.
	 
	9) 408 Request Timeout
	 - 요청을 한 시간이 오랜된 연결 일부에 대해 서버가 전송하며,
	   어떤 경우에는 이전에 클라이언트로부터 어떠한 요청이 없었다고 하더라도 보낸다.
	 - 서버가 사용되지 않는 연결을 끊고 싶어한다는 것을 의미
	 - 일부 서버는 이 메시지를 보내지 않고 연결을 끊어버리기도 함.
	 
	10) 409 Conflict
	 - 요청이 현재 서버의 상태와 충돌될 때 보냄.
	 
	11) 410 Gone
	 - 요청한 콘텐츠가 서버에서 영구적으로 삭제되었으며, 전달해 줄 수 있는 주소 역시 존재하지 않을 때 보냄.
	 - 클라이언트가 그들의 캐쉬와 리소스에 대한 링크를 지우기를 기대.
	 
	12) 411 Length Required
	 - 서버에서 필요로 하는 Content-Length 헤더 필드가 정의되지 않은 요청이 들어왔기 때문에 서버가 요청을 거절함.
	 
	13) 412 Precondition Failed
	 - 클라이언트의 헤더에 있는 전제조건은 서버의 전제조건에 적절하지 않음
	
	14) 413 Payload Too Large
	 - 요청 엔티티는 서버에서 정의한 한계보다 크다.
	 - 서버는 연결을 끊거나 혹은 Retry-After 헤더 필드로 돌려보낼 것임.
	 
	15) 414 URI Too Long
	 - 클라이언트가 요청한 URI는 서버에서 처리하지 않기로 한 길이보다 길다.
	 
	16) 415 Unsupported Media Type
	 - 요청한 미디어 포맷은 서버에서 지원하지 않는다.
	 - 서버는 해당 요청을 거절할 것임.
	 
	17) 416 Requested
	 - Range 헤더 필드에 요청한 지정 범위를 만족시킬 수 없다.
	 - 서버는 해당 요청을 거절할 것임.
	 
	18) 417 Expectation Failed
	 - 응답 코드는 Expect 요청 헤더 필드로 요청한 예상이 서버에서는 적당하지 않음을 알려줌.
	
	19) 418 I'm a teapot
	 - 장비 타입이 다른 경우에 대한 응답코드.
	 
	20) 421 Misdirected Request
	 - 서버로 유도된 요청은 응답을 생성할 수 없다.
	 - 이것은 서버에서 요청 URI와 연결된 스킴과 권한을 구성하여 응답을 생성할 수 없을 때
	 
	21) 422 Unprocessable Entity (WebDAV)
	 - 요청은 잘 만들어 졌지만, 문법 오류로 인하여 따를 수 없다.
	
	22) 423 Locked (WebDAV)
	 - 리소스는 접근하는 것이 잠겨있다.
	 
	23) 424 Failed  (WebDAV)
	 - 이전 요청이 실패하였기 때문에 지금의 요청도 실패하였음.
	 
	24) 426 Upgrade Required
	 - 서버는 지금의 프로토콜을 사용하여 요청을 처리하는 것을 거절하였지만,
	   클라이언트가 다른 프로토콜로 업그레이드를 하면 처리를 할 지도 모른다.
	   
	25) 428 Prediction Required
	 - 오리진 서버는 요청이 조건적이어야 한다.
	 - 클라이언트가 리소스를 GET해서, 수정하고, 그리고 PUT으로 서버에 돌려놓는 동안
	   서드 파티가 서버의 상태를 수정하여 발생하는 충돌인 '업데이트 상실'을 예방하기 위한 목적
	   
	26) 429 Too Many Requests
	 - 사용자가 지정된 시간에 너무 많은 요청을 보냈습니다.
	
	27) 431 Request Header Fields Too Large
	 - 요청한 헤더 필드가 너무 크기 때무에 서버는 요청을 처리하지 않을 것.
	 - 요청은 크기를 줄인 다음에 다시 전송해야 한다.
	 
	28) 451 Unavailable For Legal Resons
	 - 사용자가 요청한 것은 정부에 의해 검열된 웹 페이지이와 같은 불법적인 리소스.
	 
E. 5XX
- 서버 에러 응답
	1) 500 Internal Server Error
	 - 서버가 처리 방법을 모르는 상황과 마주쳤음
	 - 서버는 아직 처리 방법을 알 수 없다
	
	2) 501 Not Implemented
	 - 요청 방법은 서버에서 지원되지 않으므로 처리할 수 없다.
	 - 서버가 지원해야 하는 유일한 방법은 GET와 HEAD이다.
	 - 이 코드는 반환하면 안된다
	 
	3) 502 Bad Gateway
	 - 서버가 요청을 처리하는 데 필요한 응답을 얻기 위해 게이트웨이로 작업하는 동안 잘못된 응답을 수신했음.
	
	4) 503 Server Unavailable
	 - 서버가 요청을 처리할 준비가 되지 않았다.
	 - 일반적인 원인은 유지보수를 위해 작동이 중단되거나 과부하가 걸린 서버.
	 
	5) 504 GateWay Timeout
	 - 서버가 게이트웨이 역할을 하고 있으며, 적시에 응답을 받을 수 없을 때 주어진다
	 
	6) 505 HTTP Version Not Supported
	 - 요청에 사용된 HTTP 버전은 서버에서 지원되지 않음
	 
	7) 506 Variant Also Negotiates
	 - 서버 내부 구성에 오류가 있다.
	
	8) 507 insufficient Storage
	 - 서버 내부 구성에 오류가 있다.
	 
	9) 508 Loop Detected (WebDAV)
	 - 서버가 요청을 처리하는 동안 무한 루프를 감지했다.
	 
	10) 510 Not Extended
	 - 서버가 요청을 이행하려면 요청에 대한 추가 확장이 필요하다.
	 
	11) 511 Network Authentication Required
	 - 511 상태 코드는 클라이언트가 네트워크 엑서스를 얻기 위해 인증할 필요가 있음을 나타낸다.
	
	
	
	
	
	